# remap prefix to Control + a
unbind C-b
set -g prefix C-a

# screen-like bindings
bind space next-window

# jump to beginning of line in Bash (with emacs bindings)
bind a send-prefix

# toggle windows with Ctrl-a + Ctrl-a
bind C-a last-window

# force a reload of the config file
bind R source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# Move current window to session named "bg" (and create session if it does not exist)
bind B if-shell "! tmux has-session -t bg" "new-session -d -s bg" \; move-window -t bg

# Allows for faster key repetition
set -s escape-time 0

## Change the default $TERM to tmux-256color
#set -g default-terminal "tmux-256color"

## Enable RGB colour if running in xterm(1)
#set-option -sa terminal-overrides ",xterm*:Tc"

## No bells at all
#set -g bell-action none

## Turn the mouse on, but without copy mode dragging
#set -g mouse on
#unbind -n MouseDrag1Pane
#unbind -Tcopy-mode MouseDrag1Pane


# smart pane switching with awareness of vim splits
# via: https://thoughtbot.com/blog/seamlessly-navigate-vim-and-tmux-splits
# reqs: https://github.com/christoomey/vim-tmux-navigator
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"
